#+TITLE: Openstack IPv6配置调研

Openstack的官方IPv6配置文档提到，无论是使用私有网络还是公共网络，都可以将虚拟机接入IPv6网络。这两种网络方式中，虚拟机都会获得全局唯一的IPv6地址，并且也确实全局可访问，但是配置细节不太一样。

* 实验环境

实验室的上游路由器关闭了RA广播。所以下面的配置中，需要上游路由器RA信息的功能没有进行尝试。

虚拟机全部选用双栈配置，是因为Openstack子网的DHCP模块需要IPv4地址才能正常启动；并且测试中，双栈使得我可以在IPv6无法访问时，用v4地址访问。实际IPv6的地址分配等等过程与IPv4是无关的。

* 私有网络配置

在私有网络中，虚拟机通过私有网络的网桥与虚拟路由器相连，所有对外流量经由虚拟路由器的公网网关到达外网。此时地址分配和RA信息都在私有网络内部分发。

这里使用的配置方式与白易学长他们的毕设所使用的方式一样，只是Openstack比当时成熟，需要的操作少了一些。

#+CAPTION: Private Duel-Stack IPv6
#+NAME: fig:private-duel-stack
[[./figs/private-v6-dhcpv6-stateful.png]]

** 地址分配和Router Advertisement方式

| RA模式           | 地址分配模式     |                                                                                 |
|------------------+------------------+---------------------------------------------------------------------------------|
| SLAAC            | SLAAC            | EUI-64地址，虚拟路由器提供路由和RA                                              |
| DHCPv6-stateless | DHCPv6-stateless | EUI-64地址，虚拟路由器提供路由和RA。Openstack DHCPv6服务器提供其他信息，比如DNS |
| DHCPv6-stateful  | DHCPv6-stateful  | 虚拟路由器RA中指定M Flag，从Openstack DHCPv6服务器动态获取地址                  |

由于虚拟机所属的子网必须不能包含上游路由器的GUA（2001:250:3::1/64），所以该子网的前缀长度选取2001:250:3:0:1::/80（白易学长的毕设也选用了同样的前缀长度）。

由于使用了长度为80的子网前缀，所以最终只展示了DHCPv6 Stateful的地址分配方式。在其他测试中也配置了SLAAC网络，地址分配正确，但是由于路由不正确，没有外部访问的能力。

** 与外部互联的路由

*** 从内部访问外部

如上图所示，虚拟路由器的公网网关并没有配置上游链路子网（2001:250:3::/64）内的GUA，而是添加了一跳默认路由指到上游路由器的LLA。这省去了配置一个公共IPv6网络的步骤。

*** 从外部访问内部

无论虚拟路由器的公网网关配置了上游子网内的GUA与否，由于我无法在上游路由器上指定下一跳，所以必须在虚拟路由器的公网网管上配置ndp_proxy（白易学长也使用了同样的方法解决这个问题）。

白易学长认为即便有上游路由器的访问权限，由于虚拟路由器的网关是一个接在linux网桥上的虚拟设备，上游路由器无法指定到；并且2001:250:3:0:1::/80的子网与2001:250:3::/64的子网重叠，所以依旧必须配置ndp_proxy。 *我没有配置过路由器，所以不清楚他说的对不对。*

Openstack不会自己配置ndp_proxy，需要人为／脚本在Openstack之外单独设置。

** 不足

1. 需要额外配置ndp proxy
2. linux的dhcpv6客户端似乎不支持非64的前缀长度。我确定DHCPv6服务器给的信息中没有前缀信息（RFC中似乎也没有提到），并且在RA信息中的前缀信息是正确的（80），然而客户端还是坚持64长度的前缀。 *不知道这个问题怎么解决？*
3. 如果上游子网的前缀长度已经是64，则无法使用SLAAC模式分配地址


* 公共网络配置

在公共网络中，虚拟机接入公共网络的网桥，通过同样接在该网桥上的物理端口与外界通信。由于不存在虚拟路由器，RA功能依赖上游路由器，但是Openstack还是可以在该公共网络中配置DHCP服务器。Openstack会在这个DHCP服务器中指定可以接受服务的虚拟机的MAC地址，所以应该不会和外界的DHCP服务器冲突。然而，外界的DHCP服务器还是会影响到虚拟机的地址获取，很可能它会得到一个不是由Openstack分配的地址，此时虚拟机的流量将无法通过Openstack的Iptables安全检查，无法联网。

#+CAPTION: public Duel-Stack IPv6
#+NAME: fig:public-duel-stack
[[./figs/public-v6-dhcpv6-stateful.png]]

** 地址分配和Router Advertisement方式

| RA模式           | 地址分配模式     |                                                                                 |
|------------------+------------------+---------------------------------------------------------------------------------|
| //               | SLAAC            | EUI-64地址，上游路由器提供路由和RA                                              |
| DHCPv6-stateless | DHCPv6-stateless | EUI-64地址，上游路由器提供路由和RA。Openstack DHCPv6服务器提供其他信息，比如DNS |
| DHCPv6-stateful  | DHCPv6-stateful  | 上游RA中指定M Flag，从Openstack DHCPv6服务器获取地址                            |

与私有网络不同，使用公共网络需要外部网络与Openstack配合。一方面，要求上游路由器提供RA信息。另外一方面，在地址获取中，如前所述，由于Openstack会在Iptables中配置地址检查，所以虚拟机的地址分配需要交给Openstack。这意味着如果使用DHCP的话，无论是v4网络还是v6网络，要在公共网络中关掉外部的DHCP服务器。如果使用SLAAC模式的话，由于不需要DHCP服务器，所以不存在这个问题。

考虑到目前Openstack的DHCP模块必须要有IPv4地址，而我们的需求中IPv4地址又比较紧张，所以不推荐使用DHCP。在实验环境中，由于没有上游的RA，且已经分配出前缀长度为80的子网，所以使用DHCPv6 Stateful的方式进行演示。另外，同样由于没有RA，示例虚拟机的路由是我手动配置的。

** 优点

1. 不存在子网划分的问题，虚拟机与宿主机平级。考虑到Openstack的网络功能本身不强，这可能是比较合适的方法。

** 不足

1. 不推荐DHCPv6方式获取地址，使用SLAAC会少很多麻烦
2. SLAAC模式要求上游子网使用/64的前缀

* 总结

Openstack虽然已经有了SLAAC和DHCP的概念，但是IPv6的支持还是不够强，灵活性很差。在资源受限时（公共IPv4地址不足，或者IPv6前缀长度大于/等于64），可行的方案就不多了。

* Reference

[[http://docs.openstack.org/liberty/networking-guide/adv_config_ipv6.html][官方IPv6配置文档：Using OpenStack Networking with IPv6 (Kilo/Liberty/Mikata)]]
